// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Models;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20241031040029_AddTablasIniciales")]
    partial class AddTablasIniciales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Cuenta.Usuario", b =>
                {
                    b.Property<int>("Usuarioid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Usuarioid"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Usuarioid");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("api.Models.Movimientos", b =>
                {
                    b.Property<int>("Movimientoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Movimientoid"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Idproducto")
                        .HasColumnType("integer");

                    b.Property<int>("Idusuario")
                        .HasColumnType("integer");

                    b.Property<int>("Tipomovimiento")
                        .HasColumnType("integer");

                    b.HasKey("Movimientoid");

                    b.HasIndex("Idproducto");

                    b.HasIndex("Idusuario");

                    b.ToTable("movimientos");
                });

            modelBuilder.Entity("api.Models.Productos", b =>
                {
                    b.Property<int>("productoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("productoid"));

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("precio")
                        .HasColumnType("numeric");

                    b.HasKey("productoid");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("api.Models.Movimientos", b =>
                {
                    b.HasOne("api.Models.Productos", "Producto")
                        .WithMany()
                        .HasForeignKey("Idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Cuenta.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
